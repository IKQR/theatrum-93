@model (Guid, List<Theatrum.Models.Models.PlaceModel>)
@{
    ViewData["Title"] = "Зала вистави";

    // ViewData["Meta.keywords"] = new string[]
    // {
    // $"Купити квиток на виставу Teatrum | {Model.Name}", $"придбати білет на виставу Teatrum | {Model.Name}", $"квитки Teatrum | {Model.Name}", $"Teatrum | *дата* театр",$"Teatrum |  {Model.Name} прем’єра", $"theatrum Teatrum |  {Model.Name}"
    // };
    // ViewData["Meta.description"] = @Model.Description;
    Layout = "_Layout";
}

@{ await Html.RenderPartialAsync("_PlacesPartial"); }

<div class="col s12 ">
  <div style="background-color: #212121; border-radius: 10px; height: 50vh;">
    <div class="s-vflex full-height">
      <div class="container">
      </div>
      <div class="container">
        <div id="btnPay" class="s-vflex-center">
          <span class=" weight-strong white-text">Всього до сплати: </span>
          <span class="summary white-text translucent"> <span id="generalPrice">0</span> грн </span>
          <div href="#" class="s-vflex"
               style="display: flex; height: auto; padding: 0 32px; padding-top: 5%">
            <a id="pay-tickets" href="#" type="button" class="indigo darken-4 btn waves-effect waves-dark" onclick="onSubmitTickents()">
              Сплатити
            </a>
          </div>
        </div>
      </div>
      <div style="flex: 4; overflow: auto">
        <div class="list-tickets">
          <ul id="lTickets" class="list-tickets">
          </ul>
        </div>
      </div>
    </div>
    <!--
    <div class="container">
      <div class="aside-info">



      </div>
    </div>
    -->
  </div>
</div>

<script>
  window.onload = function () {
    var checkedPlaces = @Json.Serialize(Model.Item2.Select(x => x.PlaceId));

    checkedPlaces.forEach((x) => {
      var el = document.getElementById(x);
      el.classList.value = "seat";

      for (let i = 0; i < el.children.length; i++) {
        el.children[0].children[i].style.fill = "#fff";
      }
      el.children[1].style.fill = "#fff";
    });

  }
</script>

<script>

  const priceForPlace = (row) => {
    var coef = @(3);
    switch (row) {
    case 1:
        return 10 * coef;
      case 2:
        return 10 * coef;
      case 3:
        return 30 * coef;
      case 4:
        return 40 * coef;
      case 5:
        return 50 * coef;
      case 6:
        return 30 * coef;
      case 7:
        return 30 * coef;
      case 8:
        return 30 * coef;
      default:
        return 30 * coef;
    }
  }

  const seatEventHandler = (seat) => {

    let splitedSeat = seat.id.split("_")
    const seatObj = { place: splitedSeat[1], row: splitedSeat[3] }

    seat.querySelectorAll('rect').
      forEach(rect => {
        rect.setAttribute('style', 'fill:#fff');
      });
    seat.querySelectorAll('path').
      forEach(path => {
        path.setAttribute('style', 'fill:#fff');
      });

    var node = document.createElement("LI");
    node.setAttribute("data-row", seatObj.row);
    node.setAttribute("data-place", seatObj.place);


    var divCard = document.createElement("DIV");
    divCard.classList.add("card");
    divCard.classList.add("blue-grey");
    divCard.classList.add("darken-4");
    divCard.classList.add("ticket-to-buy");

    var divContent = document.createElement("DIV");
    divContent.classList.add("card-content");
    divContent.classList.add("white-text");

    var div = document.createElement("DIV");
    div.classList.add("s-hflex-start");

    var spanTicket = document.createElement("SPAN");
    spanTicket.classList.add("card-title");

    var spanNode = document.createElement("SPAN");

    var textTicket = document.createTextNode("Ticket ");
    var textnode = document.createTextNode(` Row ${seatObj.row};  Place ${seatObj.place}; Price ${priceForPlace(seatObj.row)}$ `);
    //
    //
    spanTicket.appendChild(textTicket);

    div.appendChild(textnode);
    divContent.appendChild(spanTicket);
    divContent.appendChild(div);

    var divAction = document.createElement("DIV");
    divAction.classList.add("card-action");
    divAction.classList.add("center");
    var button = document.createElement("button");
    button.classList.add("btn");
    button.innerHTML = "Delete ticket";
    button.addEventListener('click', function (event) {

      var toRemove = event.target.closest('LI')
      var idToRemove = ""
      idToRemove = "seat_" + toRemove.getAttribute("data-place") + "_row_" + toRemove.getAttribute("data-row");
      /*toRemove.innerHTML.split(' ').map((x,index) => {
          const seat1 = "";
          const row1 = ""
          if(index===5){
              seat = "seat_" + x
              return
          }
          if(index === 2){
              row = "_row_" + x
          }
      })
      idToRemove = (seat + row).replace(/;/gi, '');*/
      console.log(idToRemove);
      const placeToUncheck = document.getElementById(idToRemove)

      placeToUncheck.querySelectorAll('rect').
        forEach(rect => {
          rect.setAttribute('style', 'fill:#ааа');
        });
      placeToUncheck.querySelectorAll('path').
        forEach(path => {
          path.setAttribute('style', 'fill:#000');
        });
      placeToUncheck.classList.add("btn")

      toRemove.remove()

      var p = Number( document.getElementById("generalPrice").innerText);
      p -= Number(priceForPlace(toRemove.getAttribute("data-row")));
      document.getElementById("generalPrice").innerText = p;

    })

    //
    divAction.appendChild(button);


    divCard.appendChild(divContent);
    divCard.appendChild(divAction);

    node.appendChild(divCard);

    //            node.appendChild(textnode);
    //            node.appendChild(button);
    document.getElementById("lTickets").appendChild(node);

    var price = Number(document.getElementById("generalPrice").innerText);
    price += Number(priceForPlace(seatObj.row));
    document.getElementById("generalPrice").innerText = price;

  }

  const theater = document.getElementById("theatre");
  theater.addEventListener('click', function (event) {
    if (event.target.closest('.btn')) {
      var seat = event.target.closest('.btn')

      seat.classList.remove("btn")
      seatEventHandler(seat)

    }
  })

  const onSubmitTickents = () => {
    const ticketsList =
      document.querySelectorAll('#lTickets')['0'].getElementsByTagName('li');
    let result = [];
    for (var i = 0; i < ticketsList.length; i++) {
      let dataRow = ticketsList[i].getAttribute("data-row");
      let dataPlace = ticketsList[i].getAttribute("data-place");
      result.push("seat_" + dataPlace.toString() + "_row_" + dataRow.toString());
    }
    console.log('@Model.Item1.ToString()');
    var s = '@(Url.ActionLink("BuyTickets","Show"))'
    const myUrlWithParams = new URL(s);
    myUrlWithParams.searchParams.append("sessionId", '@Model.Item1.ToString()')
    result.forEach((x) => myUrlWithParams.searchParams.append("tickets", x));
    myUrlWithParams.searchParams.append("price", Number(document.getElementById("generalPrice").innerText));

    console.log(myUrlWithParams);
    window.location = myUrlWithParams.href;

  }
</script>
